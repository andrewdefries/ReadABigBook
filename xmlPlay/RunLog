
R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-1  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 1
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 16.205   0.888  17.162 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-2  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 2
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 16.729   0.596  17.409 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-3  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 3
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 16.709   0.764  17.585 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-4  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 4
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 16.261   0.608  16.922 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-5  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 5
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 16.217   0.496  16.766 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-6  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 6
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 16.585   0.712  17.396 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-7  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 7
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 16.165   0.652  16.871 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-8  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 8
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 16.821   0.744  17.709 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-9  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 9
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 17.565   0.892  18.611 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-10  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 10
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 17.441   0.660  18.160 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-11  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 11
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 17.465   0.612  18.191 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-12  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 12
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.780   0.744  16.627 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-13  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 13
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.188   0.532  15.758 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-14  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 14
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.048   0.372  15.458 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-15  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 15
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.976   0.456  15.500 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-16  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 16
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.372   0.452  15.863 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-17  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 17
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.140   0.456  15.633 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-18  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 18
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.268   0.528  15.837 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-19  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 19
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.292   0.444  15.804 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-20  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 20
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.980   0.376  15.395 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-21  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 21
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.020   0.448  15.498 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-22  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 22
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.836   0.452  15.323 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-23  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 23
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.048   0.408  15.497 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-24  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 24
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.004   0.444  15.483 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-25  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 25
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.968   0.424  15.427 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-26  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 26
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.252   0.576  15.870 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-27  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 27
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.868   0.440  15.345 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-28  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 28
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.000   0.440  15.479 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-29  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 29
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.000   0.444  15.483 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-30  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 30
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.020   0.424  15.484 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-31  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 31
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.948   0.420  15.406 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-32  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 32
[1] "32 has no entry"
[[1]]
[1] "32 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.792   0.420  15.249 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-33  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 33
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.112   0.472  15.623 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-34  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 34
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.072   0.516  15.642 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-35  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 35
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.904   0.428  15.368 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-36  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 36
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.952   0.372  15.362 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-37  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 37
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.168   0.396  15.601 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-38  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 38
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.996   0.440  15.474 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-39  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 39
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.944   0.420  15.401 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-40  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 40
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.980   0.404  15.421 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-41  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 41
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.036   0.380  15.455 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-42  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 42
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.024   0.580  15.654 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-43  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 43
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.344   0.408  15.791 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-44  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 44
[1] "44 has no entry"
[[1]]
[1] "44 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.052   0.380  15.468 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-45  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 45
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.948   0.424  15.409 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-46  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 46
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.944   0.460  15.443 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-47  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 47
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.948   0.448  15.437 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-48  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 48
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.920   0.416  15.374 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-49  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 49
[1] "49 has no entry"
[[1]]
[1] "49 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.168   0.500  15.720 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-50  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 50
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.072   0.428  15.538 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-51  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 51
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.016   0.388  15.443 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-52  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 52
[1] "52 has no entry"
[[1]]
[1] "52 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.924   0.384  15.344 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-53  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 53
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.968   0.524  15.541 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-54  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 54
[1] "54 has no entry"
[[1]]
[1] "54 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.928   0.464  15.430 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-55  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 55
[1] "55 has no entry"
[[1]]
[1] "55 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.936   0.412  15.383 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-56  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 56
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.928   0.456  15.425 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-57  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 57
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.024   0.496  15.557 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-58  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 58
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.972   0.408  15.416 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-59  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 59
[1] "59 has no entry"
[[1]]
[1] "59 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.152   0.424  15.617 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-60  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 60
[1] "60 has no entry"
[[1]]
[1] "60 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.044   0.404  15.484 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-61  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 61
[1] "61 has no entry"
[[1]]
[1] "61 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.016   0.460  15.528 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-62  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 62
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.424   0.448  15.912 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-63  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 63
[1] "63 has no entry"
[[1]]
[1] "63 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.928   0.372  15.336 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-64  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 64
[1] "64 has no entry"
[[1]]
[1] "64 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.848   0.472  15.355 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-65  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 65
[1] "65 has no entry"
[[1]]
[1] "65 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.016   0.532  15.598 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-66  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 66
[1] "66 has no entry"
[[1]]
[1] "66 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.932   0.412  15.380 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-67  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 67
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.012   0.420  15.471 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-68  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 68
[1] "68 has no entry"
[[1]]
[1] "68 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.012   0.408  15.457 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-69  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 69
[1] "69 has no entry"
[[1]]
[1] "69 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.080   0.396  15.514 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-70  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 70
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.140   0.460  15.638 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-71  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 71
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.288   0.452  15.780 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-72  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 72
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.300   0.416  15.770 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-73  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 73
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.248   0.496  15.799 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-74  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 74
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.024   0.400  15.459 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-75  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 75
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.256   0.400  15.696 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-76  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 76
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.948   0.524  15.511 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-77  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 77
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.068   0.424  15.531 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-78  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 78
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.412   0.404  15.857 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-79  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 79
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.204   0.452  15.695 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-80  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 80
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.204   0.580  15.839 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-81  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 81
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.004   0.512  15.560 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-82  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 82
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.184   0.416  15.636 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-83  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 83
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.036   0.380  15.454 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-84  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 84
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.168   0.524  15.766 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-85  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 85
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.040   0.408  15.485 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-86  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 86
[1] "86 has no entry"
[[1]]
[1] "86 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.836   0.436  15.310 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-87  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 87
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.300   0.424  15.764 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-88  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 88
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.404   0.564  16.011 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-89  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 89
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.136   0.484  15.659 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-90  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 90
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.200   0.408  15.647 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-91  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 91
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.980   0.468  15.484 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-92  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 92
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.372   0.452  15.864 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-93  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
Error in `[<-.data.frame`(`*tmp*`, i, names(nodes[[i]]), value = c("BackgroundA major barrier to addressing the problem of transport injury in low to middle-income countries is the lack of information regarding the incidence of traffic crashes and the demographic, behavioural and socio-economic determinants of crash-related injury. This study aimed to determine the baseline frequency and distribution of transport injury and the prevalence of various road safety behaviours in a newly recruited cohort of Thai adults.",  : 
  duplicate subscripts for columns
Calls: lapply ... xmlToDataFrame -> fromRaggedXML2DataFrame -> [<- -> [<-.data.frame
Execution halted

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-94  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 94
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.924   0.432  15.393 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-95  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 95
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.012   0.588  15.650 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-96  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 96
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.052   0.428  15.517 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-97  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 97
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.244   0.420  15.703 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-98  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 98
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.924   0.456  15.419 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-99  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 99
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.988   0.420  15.467 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-100  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 100
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.984   0.424  15.443 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-101  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 101
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.116   0.372  15.526 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-102  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 102
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.104   0.428  15.574 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-103  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 103
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.376   0.512  15.958 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-104  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 104
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.128   0.384  15.551 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-105  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 105
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.036   0.408  15.482 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-106  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 106
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.064   0.456  15.560 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-107  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 107
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.076   0.448  15.563 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-108  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 108
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.232   0.412  15.683 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-109  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 109
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.132   0.368  15.536 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-110  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 110
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.104   0.512  15.653 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-111  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 111
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.180   0.556  15.789 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-112  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 112
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.860   0.460  15.355 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-113  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 113
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.184   0.428  15.648 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-114  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 114
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.116   0.352  15.512 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-115  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 115
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.044   0.464  15.575 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-116  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 116
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.508   0.448  15.995 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-117  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 117
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.252   0.372  15.663 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-118  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 118
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.036   0.524  15.624 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-119  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 119
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.188   0.460  15.686 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-120  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 120
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.028   0.392  15.459 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-121  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 121
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.112   0.496  15.647 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-122  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 122
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.420   0.388  15.874 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-123  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 123
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.112   0.344  15.494 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-124  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 124
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.960   0.436  15.433 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-125  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 125
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.980   0.440  15.457 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-126  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 126
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 16.029   0.544  16.644 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-127  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 127
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.076   0.424  15.538 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-128  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 128
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.236   0.400  15.675 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-129  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 129
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.056   0.424  15.517 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-130  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 130
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.004   0.460  15.501 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-131  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 131
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.140   0.476  15.656 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-132  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 132
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.204   0.424  15.667 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-133  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 133
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.204   0.412  15.653 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-134  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 134
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.588   0.488  16.130 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-135  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 135
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.148   0.404  15.589 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-136  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 136
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.176   0.412  15.623 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-137  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 137
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.044   0.440  15.525 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-138  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 138
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.248   0.576  15.877 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-139  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 139
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.088   0.472  15.603 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-140  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 140
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.220   0.484  15.742 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-141  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 141
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.032   0.496  15.595 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-142  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 142
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.240   0.416  15.696 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-143  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 143
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.252   0.428  15.719 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-144  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 144
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.912   0.496  15.444 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-145  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 145
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.276   0.516  15.845 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-146  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 146
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.064   0.436  15.541 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-147  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 147
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.044   0.360  15.443 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-148  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 148
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.880   0.484  15.404 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-149  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 149
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.268   0.552  15.892 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-150  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 150
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.940   0.420  15.397 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-151  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 151
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.180   0.404  15.620 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-152  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 152
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.028   0.416  15.480 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-153  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 153
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.036   0.384  15.460 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-154  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 154
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.236   0.436  15.712 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-155  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 155
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.296   0.400  15.733 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-156  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 156
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.056   0.384  15.477 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-157  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 157
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.376   0.504  15.946 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-158  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 158
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.160   0.444  15.644 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-159  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 159
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.284   0.388  15.711 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-160  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 160
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.080   0.416  15.535 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-161  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 161
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.248   0.448  15.734 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-162  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 162
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.200   0.444  15.682 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-163  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 163
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.316   0.404  15.757 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-164  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 164
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.272   0.624  15.959 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-165  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 165
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.228   0.420  15.687 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-166  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 166
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.252   0.380  15.672 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-167  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 167
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.116   0.520  15.675 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-168  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 168
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.316   0.420  15.774 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-169  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 169
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.236   0.372  15.647 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-170  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 170
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.200   0.392  15.628 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-171  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 171
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.184   0.456  15.678 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-172  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 172
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.124   0.592  15.775 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-173  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 173
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.248   0.392  15.679 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-174  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 174
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.244   0.396  15.680 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-175  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 175
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.232   0.380  15.653 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-176  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 176
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.080   0.504  15.635 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-177  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 177
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.160   0.428  15.627 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-178  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 178
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.248   0.368  15.653 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-179  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 179
[1] "179 has no entry"
[[1]]
[1] "179 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.984   0.492  15.542 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-180  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 180
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.084   0.416  15.538 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-181  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 181
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.028   0.456  15.521 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-182  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 182
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.728   0.396  16.164 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-183  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 183
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.272   0.476  15.797 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-184  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 184
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.340   0.412  15.791 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-185  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 185
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.028   0.396  15.459 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-186  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 186
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.424   0.468  15.935 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-187  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 187
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.168   0.512  15.724 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-188  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 188
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.212   0.404  15.653 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-189  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 189
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.104   0.412  15.551 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-190  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 190
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.076   0.484  15.598 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-191  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 191
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.196   0.556  15.803 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-192  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 192
[1] "192 has no entry"
[[1]]
[1] "192 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.800   0.440  15.278 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-193  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 193
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.036   0.392  15.466 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-194  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 194
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.376   0.412  15.828 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-195  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 195
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.016   0.544  15.602 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-196  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 196
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.432   0.376  15.847 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-197  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 197
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.120   0.464  15.623 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-198  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 198
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.920   0.440  15.395 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-199  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 199
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 16.409   0.448  16.931 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-200  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 200
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.052   0.396  15.484 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-201  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 201
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.032   0.416  15.486 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-202  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 202
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.176   0.472  15.714 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-203  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 203
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.964   0.476  15.478 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-204  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 204
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.376   0.440  15.858 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-205  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 205
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.048   0.412  15.497 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-206  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 206
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.000   0.504  15.572 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-207  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 207
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.208   0.480  15.726 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-208  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 208
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.188   0.428  15.654 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-209  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 209
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.020   0.412  15.473 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-210  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 210
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.052   0.484  15.590 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-211  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 211
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.376   0.432  15.848 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-212  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 212
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.228   0.428  15.697 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-213  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 213
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.948   0.484  15.469 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-214  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 214
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.228   0.428  15.697 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-215  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 215
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.044   0.400  15.482 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-216  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 216
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.996   0.440  15.477 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-217  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 217
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.092   0.432  15.561 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-218  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 218
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.900   0.552  15.518 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-219  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 219
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.984   0.464  15.486 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-220  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 220
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.000   0.436  15.475 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-221  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 221
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.964   0.412  15.414 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-222  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 222
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.012   0.464  15.516 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-223  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 223
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.024   0.420  15.482 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-224  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 224
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.252   0.460  15.751 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-225  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 225
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.064   0.528  15.629 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-226  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 226
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.172   0.456  15.666 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-227  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 227
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.064   0.400  15.499 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-228  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 228
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.992   0.436  15.466 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-229  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 229
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.992   0.392  15.423 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-230  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 230
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.036   0.432  15.505 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-231  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 231
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.872   0.452  15.367 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-232  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 232
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.072   0.416  15.529 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-233  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 233
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.024   0.600  15.695 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-234  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 234
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.004   0.440  15.485 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-235  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 235
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.024   0.432  15.493 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-236  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 236
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.024   0.380  15.442 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-237  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 237
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.008   0.500  15.579 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-238  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 238
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.092   0.384  15.514 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-239  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 239
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.164   0.372  15.576 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-240  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 240
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.980   0.484  15.503 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-241  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 241
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.060   0.504  15.635 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-242  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 242
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.164   0.388  15.593 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-243  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 243
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.960   0.448  15.447 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-244  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 244
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.912   0.408  15.358 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-245  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 245
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.984   0.536  15.590 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-246  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 246
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.364   0.408  15.812 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-247  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 247
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.972   0.452  15.463 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-248  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 248
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.328   0.536  15.951 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-249  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 249
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.172   0.468  15.681 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-250  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 250
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.240   0.476  15.752 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-251  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 251
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.048   0.360  15.443 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-252  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 252
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.016   0.468  15.523 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-253  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 253
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.196   0.440  15.674 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-254  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 254
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.052   0.432  15.523 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-255  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 255
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.352   0.456  15.846 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-256  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 256
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.308   0.624  15.973 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-257  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 257
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.988   0.440  15.463 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-258  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 258
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.964   0.436  15.437 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-259  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 259
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.984   0.396  15.417 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-260  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 260
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.128   0.464  15.632 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-261  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 261
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.024   0.468  15.533 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-262  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 262
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 16.313   0.520  16.876 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-263  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 263
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.100   0.388  15.532 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-264  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 264
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.108   0.516  15.691 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-265  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 265
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.228   0.356  15.624 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-266  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 266
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.500   0.452  15.993 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-267  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 267
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.492   0.404  15.934 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-268  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 268
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.012   0.404  15.458 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-269  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 269
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.264   0.364  15.667 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-270  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 270
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.032   0.428  15.502 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-271  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 271
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.304   0.564  15.925 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-272  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 272
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.052   0.444  15.536 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-273  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 273
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.920   0.480  15.448 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-274  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 274
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.268   0.380  15.686 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-275  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 275
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.068   0.424  15.532 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-276  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 276
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.308   0.420  15.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-277  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 277
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.156   0.460  15.654 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-278  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 278
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.184   0.452  15.675 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-279  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 279
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.188   0.516  15.744 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-280  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 280
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.220   0.428  15.689 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-281  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 281
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.268   0.492  15.799 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-282  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 282
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.064   0.424  15.524 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-283  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 283
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.108   0.428  15.578 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-284  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 284
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.264   0.392  15.694 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-285  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 285
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.548   0.500  16.087 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-286  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 286
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.340   0.528  15.942 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-287  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 287
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.288   0.416  15.741 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-288  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 288
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.340   0.412  15.792 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-289  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 289
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.320   0.432  15.788 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-290  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 290
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.076   0.604  15.753 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-291  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 291
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.388   0.448  15.873 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-292  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 292
[1] "292 has no entry"
[[1]]
[1] "292 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.912   0.404  15.355 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-293  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 293
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.288   0.444  15.772 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-294  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 294
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.276   0.516  15.872 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-295  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 295
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.312   0.396  15.745 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-296  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 296
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.272   0.420  15.732 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-297  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 297
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.268   0.412  15.717 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-298  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 298
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.996   0.576  15.621 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-299  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 299
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.676   0.396  16.111 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-300  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 300
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.044   0.388  15.467 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-301  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 301
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.500   0.396  15.936 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-302  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 302
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.252   0.504  15.828 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-303  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 303
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.132   0.388  15.557 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-304  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 304
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 16.065   0.440  16.551 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-305  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 305
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.000   0.512  15.553 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-306  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 306
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.208   0.412  15.656 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-307  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 307
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.184   0.612  15.905 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-308  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 308
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.248   0.436  15.725 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-309  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 309
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.076   0.580  15.712 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-310  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 310
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.268   0.452  15.759 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-311  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 311
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.028   0.436  15.504 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-312  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 312
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.172   0.440  15.650 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-313  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 313
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.176   0.500  15.726 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-314  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 314
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.256   0.472  15.763 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-315  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 315
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.392   0.444  15.874 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-316  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 316
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.244   0.404  15.687 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-317  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 317
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.356   0.500  15.900 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-318  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 318
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.220   0.404  15.707 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-319  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
Error in `[<-.data.frame`(`*tmp*`, i, names(nodes[[i]]), value = c("",  : 
  duplicate subscripts for columns
Calls: lapply ... xmlToDataFrame -> fromRaggedXML2DataFrame -> [<- -> [<-.data.frame
Execution halted

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-320  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 320
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.012   0.508  15.568 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-321  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 321
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.508   0.428  15.985 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-322  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 322
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.328   0.428  15.793 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-323  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 323
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.176   0.440  15.661 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-324  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 324
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.032   0.476  15.561 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-325  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 325
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.024   0.528  15.592 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-326  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 326
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.988   0.428  15.453 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-327  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 327
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.816   0.408  16.263 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-328  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 328
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.584   0.440  16.075 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-329  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 329
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.760   0.508  16.334 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-330  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 330
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.328   0.492  15.874 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-331  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 331
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.176   0.352  15.566 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-332  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 332
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.132   0.532  15.731 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-333  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 333
[1] "333 has no entry"
[[1]]
[1] "333 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.032   0.424  15.498 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-334  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 334
[1] "334 has no entry"
[[1]]
[1] "334 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.968   0.472  15.476 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-335  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 335
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 14.992   0.412  15.444 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-336  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 336
[1] "336 has no entry"
[[1]]
[1] "336 has no entry"

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.240   0.388  15.668 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-337  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 337
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.228   0.400  15.668 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-338  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 338
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.280   0.512  15.830 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-339  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 339
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.648   0.448  16.154 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-340  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 340
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.088   0.472  15.600 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-341  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 341
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.196   0.440  15.674 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-342  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 342
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.104   0.400  15.542 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-343  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 343
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.040   0.384  15.463 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-344  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 344
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.060   0.440  15.538 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-345  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 345
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.168   0.380  15.588 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-346  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 346
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.052   0.388  15.475 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RSQLite)
Loading required package: DBI
> 
> #open db if none create one
> con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
> 
> dbSendQuery(conn=con,
+     "CREATE TABLE MyQuery
+      (text CHARACTER)")
<SQLiteResult: DBI RES (30210, 0, 1)> 
> 
> dbBeginTransaction(con)
[1] TRUE
> dbCommit(con)
[1] TRUE
> dbDisconnect(con)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  0.664   0.076   0.767 

R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #################
> library(XML)
> library(parallel)
> library(RSQLite)
Loading required package: DBI
> #################
> rm(list=ls())
> #system("rm *.sqlite")
> 
> #unzip the archive first
> 
> #get the list of work
> files<-list.files(pattern=".nxml", recursive=TRUE)
> 
> #########
> DoTheEmbedding<-function(u){
+ #########
+ #load file
+ doc<-htmlParse(files[u])
+ 
+ #load query #//Author //Body
+ #query<-"//publisher-name"
+ #query<-"//abstract id='Abs1'"
+ ##query<-"//body"
+ #query<-"/article/abstract[@id='Abs1']"
+ query<-"//abstract"
+ 
+ #use when xml object is not rooted
+ #doc<-xmlRoot(doc)
+ 
+ 
+ #dataTable<-xpathSApply(doc, query)
+ 
+ #dataTable<-xmlToDataFrame(data)
+ 
+ datalist<-xmlToDataFrame(doc[query])##[[1]]
+ 
+ dataTable<-datalist$p
+ 
+ #dataTable<-as.character(dataTable$p[1:length(dataTable)])
+ 
+ ##, stringsAsFactors=F, check.names=F)##, header=T)
+ 
+ #con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ print(u)
+ #print(dim(dataTable))
+ #print(length(dataTable))
+ 
+ #
+ #
+ if(length(dataTable)>0){
+ ########################
+ dataTable<-as.data.frame(dataTable)
+ ####print(dataTable)
+ #only want the first hit
+ #dataTable<-dataTable[1]
+ #dataTable<-dataTable$p[1]
+ names(dataTable)<-c("text")
+ 
+ ###
+ 
+ ###
+ 
+ #write to db
+ sql<-paste("INSERT INTO MyQuery VALUES ($text)", sep="") 
+ 
+ con<-dbConnect(SQLite(),dbname="XML_db.sqlite")
+ dbBeginTransaction(con)
+ dbGetPreparedQuery(con,sql,bind.data=dataTable)
+ dbCommit(con)
+ dbDisconnect(con)
+ ########################
+ } else {
+ 
+ print(paste(u, "has no entry", sep=" "))
+ 
+ }
+ #########d
+ }
> #u<-28272#:length(files) #26326
> #u<-26324 #28272#:length(files) #26326 78051
> u<-347  ##:length(files)
> 
> #########
> lapply(u, try(DoTheEmbedding, silent=T)) ##, mc.cores=4)
[1] 347
[[1]]
[1] TRUE

> #mclapply(u, DoTheEmbedding, mc.cores=4)
> 
> 
> #dbDisconnect(con)
> 
> rm(list=ls())
> 
> proc.time()
   user  system elapsed 
 15.092   0.544  15.713 
